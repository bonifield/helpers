# various examples of field/value comparison checks
# tested with 8.5.2
#
# to use this example:
#	place this config "field-comparisons.conf" in the logstash conf.d directory
#	test the config then start logstash
#		sudo bin/logstash -f conf.d/field-comparisons.conf --config.test_and_exit
#		sudo bin/logstash -f conf.d/field-comparisons.conf --config.reload.automatic

input {
	generator {
		ecs_compatibility => "v8"
		count => 1
	}
}

# cleanup and generate sample data
filter {
	mutate {
		remove_field => [ "@timestamp", "@version", "[event]", "[host]", "[sequence]" ]
	}
	mutate {
		add_field => {
			"[event][code]" => 1
			"[log][file][path]" => "/var/log/auth.log"
			"[host][ip]" => [ "192.168.99.99", "fe80::1234:5678:1a:2bcd" ]
			"[host][name]" => "MyHostname"
			"[tags]" => [ "logstash-is-great" ]
		}
	}

}

# perform field comparisons
filter {
	# tag 1
	# works 
	if [host][name] in [ "MyHostname", "MyHostname", "doesnotexistfillerexample" ] {
		mutate {
			add_tag => [ "arrays being compared to a field must have more than one value; duplicate the intended single value or add a second filler if needed" ]
		}
	}
	# does NOT work - you cannot check an array of one item
	if [host][name] in [ "MyHostname" ] {
		mutate {
			add_tag => [ "this will not work" ]
		}
	}
	# tag 2
	# works
	if [event][code] == "1" {
		mutate {
			add_tag => [ "wrap integer comparisons in quotations" ]
		}
	}
	# tag 3
	# works - one or more case-insensitive checks
	if [message] =~ /(?i)HeLlO|(?i)WORLD/ {
	# case-sensitive: omit the (?i)
	# all members can have "(?i)" if desired, but everything to the RIGHT of the first "(?i)" will be checked case-insensitive, and everything to the LEFT will not
	# /(?i)HeLlO|WORLD/ would use a case-insensitive check for BOTH "HeLlO" and "WORLD"
	# /HeLlO|(?i)WORLD/ would use a case-insensitive check for ONLY "WORLD"
		mutate {
			add_tag => [ "use like statements to compare multiple partial or case-insensitive strings" ]
		}
	}
	# tag 4
	# works - do not escape periods in like statements
	if [log][file][path] =~ /(?i)auth.log/ {
		mutate {
			add_tag => [ "like statements can be one item long and do not need periods escaped" ]
		}
	}
	# tag 5
	# works
	if "logstash-is-great" in [tags] {
		mutate {
			add_tag => [ "when comparing a single string using an in statement, place the string first and field second" ]
		}
	}
	# tag 6
	# works
	if [log][file][path] in [ "/var/log/auth.log", "/var/log/syslog" ] {
		mutate {
			add_tag => [ "check for a string field in an array of possibilities" ]
		}
	}
	# tag 7
	# works - escape slashes but not periods in like statements
	if [log][file][path] =~ /(?i)\/var\/log\/auth.log|(?i)\/var\/log\/syslog/ {
		mutate {
			add_tag => [ "escape slashes but not periods in like statements" ]
		}
	}
	# does NOT work - you cannot check an array field against another array
	if [tags] in [ "abcd", "efgh" ] {
		mutate {
			add_tag => [ "this will not work" ]
		}
	}
	# does NOT work - you cannot check an array field against another array even if all values appear in the checked array
	if [host][ip] in [ "192.168.99.99", "fe80::1234:5678:1a:2bcd" ] {
		mutate {
			add_tag => [ "this will not work" ]
		}
	}
	# does NOT work - you cannot check an array field using like statements
	if [host][ip] =~ /192.168.99.99|(?i)fe80::1234:5678:1a:2bcd/ {
		mutate {
			add_tag => [ "this will not work" ]
		}
	}
}

output {
	stdout { codec => rubydebug }
}
