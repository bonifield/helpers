# tested with v8.5.2
# https://www.elastic.co/guide/en/logstash/current/plugins-filters-mutate.html#plugins-filters-mutate-proc_order
# https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html
# https://www.elastic.co/guide/en/logstash/current/plugins-filters-translate.html
#	sudo bin/logstash -f conf.d/windows-6416-usb-vid-pid.conf --config.test_and_exit
#	sudo bin/logstash -f conf.d/windows-6416-usb-vid-pid.conf --config.reload.automatic
#
# parse VID and PID from USB logs in Windows security event code 6416
#

input {
	generator {
		ecs_compatibility => "v8"
		lines => [
			"USB\VID_05AC&PID_12A8\14cb1a32ee338ac7b443",
			"USB\VID_03F0&PID_2454\TH0AU782GH",
			"USB\VID_1BCF&PID_0005\7&46772acb&0&1",
			"HID\VID_046D&PID_C529&MI_01&Col01\8&1c4ae12a&0&0000",
			"HID\VID_046D&PID_C529&MI_00\8&45b34d2&0&0000",
			"USBPRINT\Hewlett-PackardHP_LaserJet_9999_Series_\7&44cab55&0&USB001"
		]
		count => 1
	}
}

# prep cleanup and stage winlog.event_data.DeviceId to simulate a Windows security 6416 event
filter {
	mutate {
		remove_field => [ "[host]", "[event]", "[@version]" ]
		rename => { "[message]" => "[winlog][event_data][DeviceId]" }
	}
	mutate {
		add_field => {
			"[event][code]" => 6416
		}
	}
}

filter {
	if [event][code] == "6416" {
		# parse VID, PID, and very basic printer information
		if [winlog][event_data][DeviceId] =~ /VID|PID|USBPRINT/ {
			grok {
				match => {
					"[winlog][event_data][DeviceId]" => [
						"%{DATA}\\VID_(?<[labels][vid]>[A-Fa-f0-9]{4})&PID_(?<[labels][pid]>[A-Fa-f0-9]{4}).*",
						"USBPRINT\\%{DATA:[labels][usbprintinfo]}\\%{GREEDYDATA}"
					]
				}
				add_tag => [ "usb" ]
			}
		}
		# lowercase fields to standardize against a lookup
		mutate {
			lowercase => [ "[labels][vid]", "[labels][pid]" ]
		}
		# create joined field for a single lookup table (VIDs should be unique but PIDs repeat)
		if [labels][vid] and [labels][pid] {
			mutate {
				add_field => { "[labels][vidpid]" => "%{[labels][vid]}%{[labels][pid]}" }
			}
		}
		# enrich VID using label field
		translate {
			source => "[labels][vid]"
			target => "[labels][vid_description]"
			dictionary => {
				"046d" => "Logitech, Inc."
				"03f0" => "HP, Inc"
				"05ac" => "Apple, Inc."
				"1bcf" => "Sunplus Innovation Technology Inc."
			}
			fallback => "no_match"
		}
		# enrich PID using label field (DO NOT DO THIS BECAUSE PIDS ARE NOT UNIQUE)
		translate {
			source => "[labels][pid]"
			target => "[labels][pid_description]"
			dictionary => {
				"0005" => "Optical Mouse"
				"12a8" => "iPhone 5/5C/5S/6/SE/7/8/X"
				"c529" => "Logitech Keyboard + Mice"
			}
			fallback => "no_match"
		}
		# enrich VIDPID using label field
#		translate {
#			source => "[labels][vidpid]"
#			target => "[labels][vidpid_description]"
#			dictionary_path => "/opt/lookups/vidpid.csv"
#			fallback => "no_match"
#		}
	}
}

# add the forwarding logstash information
filter {
	ruby {
		init => "
			require 'socket'
			@@hostname = Socket.gethostname
		"
		code => "
			event.set('[agent][forwarder]', @@hostname)
		"
	}
}

output {
	stdout { codec => rubydebug }
}
