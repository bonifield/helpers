# examples of tagging interesting values, ex. "living off the land" Windows binaries, and scoring fields based on select criteria before sending downstream
#
# Logstash can be used to offload some compute power ahead of the Elastic Security Solution if needed to make custom rules faster
# these concepts are ENHANCEMENTS, NOT REPLACEMENTS, for proper endpoint detection systems
#
# tested with 8.x
#
# references:
#	https://lolbas-project.github.io/
#	https://gtfobins.github.io/
#	https://www.loldrivers.io/
#
# helpful commands:
#	bin/logstash -f conf.d/pretag-lolbins.conf --config.test_and_exit
#	bin/logstash -f conf.d/pretag-lolbins.conf --config.reload.automatic

# add test data
input {
	generator {
		ecs_compatibility => "v8"
		count => 1
	}
}

# add more test data
filter {
	mutate {
		add_field => {
			"[process][name]" => "CeRtUtIl.ExE"
			"[process][args]" => [ "-urlcache", "-split", "-f" ]
		}
		# cleanup for demo, please don't remove host.name
		remove_field => [ "[event]", "[message]", "@version", "[host]" ]
	}
}

# pretag process.name
filter {
	if [process][name] {
		# preserve original if required
		mutate {
			add_field => { "[process][name_original]" => "%{[process][name]}" }
		}
		mutate {
			lowercase => [ "[process][name]" ]
		}
		# YAML format (the second half never gets used unless you want a target field)
		# binary:lolbin
		#translate {
		#	source => "[process][name]"
		#	dictionary_path => "conf.d/lolbins-windows.yml"
		#	add_tag => [ "pretag_lolbin" ]
		#}
		if [process][name] in ["acccheckconsole.exe", "adplus.exe", "advpack.dll", "agentexecutor.exe", "appinstaller.exe", "appvlp.exe", "aspnet_compiler.exe", "at.exe", "atbroker.exe", "bash.exe", "bginfo.exe", "bitsadmin.exe", "cdb.exe", "certoc.exe", "certreq.exe", "certutil.exe", "cl_invocation.ps1", "cl_loadassembly.ps1", "cl_mutexverifiers.ps1", "cmd.exe", "cmdkey.exe", "cmdl32.exe", "cmstp.exe", "comsvcs.dll", "configsecuritypolicy.exe", "conhost.exe", "control.exe", "coregen.exe", "createdump.exe", "csc.exe", "cscript.exe", "csi.exe", "customshellhost.exe", "datasvcutil.exe", "defaultpack.exe", "desk.cpl", "desktopimgdownldr.exe", "devicecredentialdeployment.exe", "devinit.exe", "devtoolslauncher.exe", "dfshim.dll", "dfsvc.exe", "diantz.exe", "diskshadow.exe", "dnscmd.exe", "dnx.exe", "dotnet.exe", "dump64.exe", "dumpminitool.exe", "dxcap.exe", "esentutl.exe", "eventvwr.exe", "excel.exe", "expand.exe", "explorer.exe", "extexport.exe", "extrac32.exe", "findstr.exe", "finger.exe", "fltmc.exe", "forfiles.exe", "fsianycpu.exe", "fsutil.exe", "ftp.exe", "gfxdownloadwrapper.exe", "gpscript.exe", "hh.exe", "ie4uinit.exe", "ieadvpack.dll", "ieexec.exe", "ieframe.dll", "ilasm.exe", "imewdbld.exe", "infdefaultinstall.exe", "installutil.exe", "jsc.exe", "launch-vsdevshell.ps1", "ldifde.exe", "makecab.exe", "manage-bde.wsf", "mavinject.exe", "mftrace.exe", "microsoft.nodejstools.pressanykey.exe", "microsoft.workflow.compiler.exe", "mmc.exe", "mpcmdrun.exe", "msbuild.exe", "msconfig.exe", "msdeploy.exe", "msdt.exe", "msedge.exe", "mshta.exe", "mshtml.dll", "msiexec.exe", "msohtmed.exe", "mspub.exe", "msxsl.exe", "netsh.exe", "ntdsutil.exe", "odbcconf.exe", "offlinescannershell.exe", "onedrivestandaloneupdater.exe", "openconsole.exe", "pcalua.exe", "pcwrun.exe", "pcwutl.dll", "pester.bat", "pktmon.exe", "pnputil.exe", "powerpnt.exe", "presentationhost.exe", "print.exe", "printbrm.exe", "procdump.exe", "protocolhandler.exe", "psr.exe", "pubprn.vbs", "rasautou.exe", "rcsi.exe", "rdrleakdiag.exe", "reg.exe", "regasm.exe", "regedit.exe", "regini.exe", "register-cimprovider.exe", "regsvcs.exe", "regsvr32.exe", "remote.exe", "replace.exe", "rpcping.exe", "rundll32.exe", "runexehelper.exe", "runonce.exe", "runscripthelper.exe", "sc.exe", "schtasks.exe", "scriptrunner.exe", "setres.exe", "settingsynchost.exe", "setupapi.dll", "shdocvw.dll", "shell32.dll", "sqldumper.exe", "sqlps.exe", "sqltoolsps.exe", "squirrel.exe", "stordiag.exe", "syncappvpublishingserver.exe", "syncappvpublishingserver.vbs", "syssetup.dll", "te.exe", "tracker.exe", "ttdinject.exe", "tttracer.exe", "unregmp2.exe", "update.exe", "url.dll", "utilityfunctions.ps1", "vbc.exe", "verclsid.exe", "vsiisexelauncher.exe", "vsjitdebugger.exe", "vsls-agent.exe", "wab.exe", "wfc.exe", "winget.exe", "winrm.vbs", "winword.exe", "wlrmdr.exe", "wmic.exe", "workfolders.exe", "wscript.exe", "wsl.exe", "wsreset.exe", "wt.exe", "wuauclt.exe", "xwizard.exe", "zipfldr.dll"] {
			mutate {
				add_tag => [ "pretag_lolbin" ]
			}
		}
	}
}

# pretag arguments
# template the generation of these blocks as to avoid errors and huge amounts of copy/paste
filter {
	if "pretag_lolbin" in [tags] {
		if [process][name] == "certutil.exe" and [process][args] {
			ruby {
				code => '
					score = 0
					certutil_args = [ "-urlcache", "-split", "-f", "-verifyctl" ]
					event.get("[process][args]").each do |item|
						certutil_args.each do |comparetothis|
							if item.downcase == comparetothis.downcase
								score += 1
							end
						end
					end
					event.set("[labels][pretag_score]", score)
				'
			}
		}
	}
}

output {
	stdout { codec => rubydebug }
}
