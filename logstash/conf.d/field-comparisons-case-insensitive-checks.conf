# various examples case-insensitive comparison checks
# tested with 8.5.2
#
# to use this example:
#	place this config "field-comparisons-case-insensitive-checks.conf" in the logstash conf.d directory
#	test the config then start logstash
#		sudo bin/logstash -f conf.d/field-comparisons-case-insensitive-checks.conf --config.test_and_exit
#		sudo bin/logstash -f conf.d/field-comparisons-case-insensitive-checks.conf --config.reload.automatic

# generate test data
input {
	generator {
		ecs_compatibility => "v8"
		count => 1
		lines => [ "AAAA", "AbCd", "EfGh" ]
	}
}

# perform field comparisons
filter {
	# all are case-sensitive so nothing will get the "found_1" tag
	if [message] =~ /aaaa|abcd|efgh/ {
		mutate {
			add_tag => [ "found_1" ]
		}
	}
	# the case-insensitive "(?i)" flag gets passed to all subsequent member checks, so all items will have the "found_2" tag
	if [message] =~ /(?i)aaaa|abcd|efgh/ {
		mutate {
			add_tag => [ "found_2" ]
		}
	}
	# everything to the right of the "(?i)" will get "found_3" ("AbCd" and "EfGh"), but nothing to the left (not "AAAA")
	if [message] =~ /aaaa|(?i)abcd|efgh/ {
		mutate {
			add_tag => [ "found_3" ]
		}
	}
	# only the last member "EfGh" will get the tag "found_4"
	if [message] =~ /aaaa|abcd|(?i)efgh/ {
		mutate {
			add_tag => [ "found_4" ]
		}
	}
	# all members will get "found_5" since it is specified for each item
	if [message] =~ /(?i)aaaa|(?i)abcd|(?i)efgh/ {
		mutate {
			add_tag => [ "found_5" ]
		}
	}
}

# cleanup so only relevant example data is shown
filter {
	prune {
		whitelist_names => [ "message", "tags" ]
	}

}

output {
	stdout { codec => rubydebug }
}



#
#
#
# EXPECTED OUTPUT
#
#
#
#	{
#	    "message" => "AAAA",
#	       "tags" => [
#	        [0] "found_2",
#	        [1] "found_5"
#	    ]
#	}
#	{
#	    "message" => "AbCd",
#	       "tags" => [
#	        [0] "found_2",
#	        [1] "found_3",
#	        [2] "found_5"
#	    ]
#	}
#	{
#	    "message" => "EfGh",
#	       "tags" => [
#	        [0] "found_2",
#	        [1] "found_3",
#	        [2] "found_4",
#	        [3] "found_5"
#	    ]
#	}
#
#
#

