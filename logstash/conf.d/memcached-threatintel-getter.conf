# example using a memcached getter filter
# see "memcached-threatintel-setter.conf"

input {
	generator {
		count => 1
	}
}

# create test data using something obtained from the setter script
filter {
	mutate {
		add_field => { "[file][hash][sha256]" => "515ae2b21e3673b43ab29cd729a6d9dc0673f5c053e7db93ceae0c3c124a7ce5" }
	}
}

filter {
	memcached {
		namespace => "sha256"
		# check for file.hash.sha256 in the cache, and populate rule.name if found
		get => {
			"%{[file][hash][sha256]}" => "[rule][name]"
		}
		add_tag => [ "threatintel_hit" ]
	}
}

output {
	stdout { codec => rubydebug }
}

#    ...
#          "file" => {
#        "hash" => {
#            "sha256" => "515ae2b21e3673b43ab29cd729a6d9dc0673f5c053e7db93ceae0c3c124a7ce5"
#        }
#    },
#          "tags" => [
#        [0] "threatintel_hit"
#    ],
#          "rule" => {
#        "name" => "threatintel-abusemalware-BumbleBee-dll"
#    },
#    ...

